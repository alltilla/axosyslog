name: syslog-ng Docker

on:
  workflow_call:
    inputs:
      pkg-type:
        required: true
        type: string  # stable / nightly
      tarball-artifact:
        required: false
        type: string
      snapshot-version:
        required: false
        type: string

env:
  DOCKER_IMAGE_NAME: ghcr.io/axoflow/axosyslog
  PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7
  DEBUG_PLATFORM: linux/amd64

jobs:
  docker:
    name: syslog-ng Docker
    if: github.repository_owner == 'axoflow'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Download source tarball artifact
        if: inputs.tarball-artifact != ''
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.tarball-artifact }}
          path: syslog-ng/apkbuild/axoflow/syslog-ng

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (syslog-ng version) for Docker
        id: docker-metadata-tags
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: type=match,pattern=syslog-ng-(.*),group=1
          sep-tags: ','

      - name: Compose Docker image tags
        id: tags
        run: |
          if [[ '${{ inputs.pkg-type }}' = 'stable' ]]; then
            TAGS='${{ steps.docker-metadata-tags.outputs.tags }}'
            DEBUG_TAGS='${{ steps.docker-metadata-tags.outputs.tags }}-dbg'
          elif [[ '${{ inputs.pkg-type }}' = 'nightly' ]]; then
            TAGS="${DOCKER_IMAGE_NAME}:nightly,${DOCKER_IMAGE_NAME}:${{ inputs.snapshot-version }}"
            DEBUG_TAGS="${DOCKER_IMAGE_NAME}:nightly-dbg,${DOCKER_IMAGE_NAME}:${{ inputs.snapshot-version }}-dbg"
          else
            echo Unexpected input: pkg-type=${{ inputs.pkg-type }}
            false
          fi
          echo "TAGS=$TAGS" >> $GITHUB_OUTPUT
          echo "DEBUG_TAGS=$DEBUG_TAGS" >> $GITHUB_OUTPUT

      - name: Build and push production Docker image
        uses: docker/build-push-action@v3
        with:
          context: syslog-ng
          file: syslog-ng/alpine.dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.tags.outputs.TAGS }}
          # description should be here because it is a multi-arch image
          # see docs: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#adding-a-description-to-multi-arch-images
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=${{ fromJSON(steps.docker-metadata-tags.outputs.json).labels['org.opencontainers.image.description'] }}
          build-args: |
            PKG_TYPE=${{ inputs.pkg-type }}
            SNAPSHOT_VERSION=${{ inputs.snapshot-version }}

      - name: Build and push debug Docker image
        uses: docker/build-push-action@v3
        with:
          context: syslog-ng
          file: syslog-ng/alpine.dockerfile
          platforms: ${{ env.DEBUG_PLATFORM }}
          push: true
          tags: ${{ steps.tags.outputs.DEBUG_TAGS }}
          build-args: |
            PKG_TYPE=${{ inputs.pkg-type }}
            SNAPSHOT_VERSION=${{ inputs.snapshot-version }}
            DEBUG=true
